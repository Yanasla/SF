#Предположим, что перед нами стоит задача посчитать сумму зарплат по клубам, чтобы найти клуб с самой высокой зарплатой.
#Мы можем сделать это с помощью функции groupby:

import pandas as pd

df = pd.read_csv('data_sf.xls')

print(df.groupby(['Club']))
#Это объект группировки, он хранит в себе информацию о том, какие строки датафрейма (по индексным номерам)
#соответствуют определенной группе (в нашем случае определенному клубу). Увидеть это можно, вызвав у объекта группировки атрибут groups:
print(df.groupby(['Club']).groups)

#строки брать для включения в группу, когда мы решим применить к этим строкам какую-нибудь агрегирующую функцию, например функцию суммы sum
grouped_df = df.groupby(['Club']).sum()
print(grouped_df)
print(grouped_df.loc['Ajax']) #Таким образом, мы получили серию, где индекс содержит все параметры, которые можно было просуммировать, а значения серии — суммы параметров для всех игроков ФК "Ajax".

#Теперь мы можем получить сумму зарплат игроков этого футбольного клуба:

print(grouped_df.loc['Ajax']['Wage'])

#мы можем ограничить список наших параметров и при группировке осуществлять суммирование только по параметру "Wage" (заработная плата):
grouped_df = df.groupby(['Club'])['Wage'].sum()
print(grouped_df)
#В каком клубе самая высокая зарплата?
grouped_df = df.groupby(['Club'])['Wage'].sum().sort_values(ascending=False)
print(grouped_df.head(5))

#Отметьте позиции (Position), по которым общая сумма зарплат (Wage) игроков превышает 5 млн евро в год.
grouped_df1 = df.groupby(['Position'])['Wage'].sum().sort_values(ascending=False)
print(grouped_df1.head(10))